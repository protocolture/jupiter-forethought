#!/bin/bash
##################################################################
##GLOBALS
##################################################################
hname=$(head -n 1 hostname.txt)
motd=$(shuf -n 1 motd.txt)
usrname="spscwby"
source ./variables.sh
root=no
##################################################################
##################################################################
prompt()
{

cmdprompt=$usrname$usrprompt$hname$apos
source ./variables.sh
##CODE FOR MAIN PROMPT
trap '' 2 

read -p $cmdprompt input

case $input in

	"LEARN")
		learn
		;&
	"LOAD")
		load-data
		;&
	"IMAGE")
		image
		;&
	"MOTD")
		echo $motd | fmt -w 83 | pv -qL 90
		prompt
		;&
	"READ")
		read-msg
		;&
	"SEND")
		send-msg
		;&
	"ATMO")
		atmo
		;&
	"LOG")
		log
		;&
	"LAB")
		lab
		;&
	"REBOOT")
		boot
		;&
	"DATE")
		shipdate
		;&
	"TIME")
		shiptime
		;&
	"SEARCH")
		search
		;&
	"STATUS")
		shipstatus
		;&
	"LOCATE")
		locate
		;&
	"ESCALATE")
		escalate
		;&
	"DISINTEGRATE")
		exit 1
		;&
	*)
		echo -e "COMMAND UNRECOGNISED" | pv -qL 90
		aplay -q UI_Terminal_Holotape_ProgramQuit_02.wav
		sleep 2
		prompt
		;;
esac
trap 2

}
##################################################################
##################################################################
##################################################################
mainmenu ()
{
##################################################################
## MAIN MENU PROMPT
trap '' 2 
clear
echo $'					
						____________  ___   _   _______ _____ 
						|  _  \ ___ \/ _ \ | | / /  _  /  ___|
						| | | | |_/ / /_\ \| |/ /| | | \ `--. 
						| | | |    /|  _  ||    \| | | |`--. \
						| |/ /| |\ \| | | || |\  \ \_/ /\__/ /
						|___/ \_| \_\_| |_/\_| \_/\___/\____/ 
' | pv -qL 500
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav           
echo "===============================================================================================================================" | pv -qL 90
echo "Drake Electronics Open Operating System DRAKOS 4.1 beta" | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------" | pv -qL 90
echo "Message of the Day" | pv -qL 90
echo $motd | fmt -w 83 | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------" | pv -qL 90
echo  
echo -e $shipname Command Line Interface
echo  
echo -e "WELCOME spscwby" | pv -qL 90
aplay -q UI_Terminal_Holotape_ProgramQuit_01.wav
echo -e "Type LEARN for command reference" | pv -qL 90
echo 
sleep 1
prompt
ls
trap 2
}
##################################################################
boot()
{
##################################################################
##BOOTUP SEQUENCE
trap '' 2 
#some random aesthetic startup junk

clear
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo Initializing BIOS | pv -qL 80
sleep 0.4
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
echo WARNING: BIOS DOES NOT MATCH CALLISTO II BIOS HASH | pv -qL 80
sleep 0.6
echo CONTINUE BOOT AT OWN RISK | pv -qL 80
sleep 0.6
echo USE OF NON STANDARD BIOS VIOLATES SOFTWARE AGREEMENT | pv -qL 80
sleep 0.6
echo SOLAR HARDWARE NOT RESPONSIBLE FOR DAMAGE OR DEATH | pv -qL 80
sleep 0.8
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
echo -e "\e[4AW#RNING: BI@S DOES NOT MATCH C@LL1STO II BOIS HASH" | pv -qL 80

echo -e "CONTIP*E BONT AT O5N RISK" | pv -qL 80

echo -e "URE 1F N*N STA*DARD B8OS VIOL(TES SOFTWARE AGR3EME^T" | pv -qL 80

echo -e "SOKAR H@RD#ARE NOT RESPO7SIBLE FOR DEMAGE OR D%ATH" | pv -qL 80
sleep 0.4
aplay -q UI_Terminal_Holotape_ProgramLoad_02.wav
echo -e "\e[4AW#R.ING= B*@S D*eS N%T M@TqH C@Ll1!TO %& B.IS H+SH" | pv -qL 80

echo -e "CO*T+P*E BO!T AT O5N R*SK" | pv -qL 80

echo -e "U!E 1F N*N STA*D+RD B8OS V*OL(T$S SOFTWARE AGR3EME^T" | pv -qL 80

echo -e "S0*AR H@$D#!RE NOT RE+PO7SI*LE F+R DEM!GE @R D%ATH" | pv -qL 80
sleep 0.4
aplay -q UI_Terminal_Holotape_ProgramLoad_03.wav
echo -e "\e[4AW#R.ING= B*@? D*eS N%T }@TqH C@Ll1!T+ %& B.I< H+SH" | pv -qL 80

echo -e ":o*?+P*E BO!T AT O5N R*SK" | pv -qL 80

echo -e "U!E 1F N*N S>A*}+RD B8OS V*OL(T$S S<FT?AR< {GR3EME^T" | pv -qL 80

echo -e "S0*AR H@$D#!RE N{T RE+PO7SI*L? F+R DEM!GE @R D%ATH" | pv -qL 80
sleep 0.4
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
echo -e "\e[4A****************************************************************" | pv -qL 80

echo -e "********************BIOS SECURITY OVERWRITTEN*******************" | pv -qL 80

echo -e "****************************************************************" | pv -qL 80

echo -e "****************************************************************" | pv -qL 80
sleep 0.8
aplay -q UI_Terminal_Holotape_ProgramQuit_02.wav
clear
echo -ne "Initializing boot.\r" | pv -qL 80
sleep 0.4
echo  -ne "Initializing boot..\r" | pv -qL 80
sleep 0.4
echo -ne "Initializing boot..." | pv -qL 80
sleep 0.4
echo Version Detect | pv -qL 80
sleep 0.4
echo Drake Industries DRAKOS 4.1 beta...  | pv -qL 80
sleep 0.4
echo Hardware Detect  | pv -qL 80
sleep 0.6
echo Solar Hardware Callisto II  | pv -qL 80
sleep 0.4
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
echo -ne "MEMTEST\r"  | pv -qL 80
sleep 0.6

echo -ne "MEMTEST [........]\r" | pv -qL 80
sleep 0.6

echo -ne "MEMTEST [X.......]\r" | pv -qL 80
sleep 0.6

echo -ne "MEMTEST [XX......]\r" | pv -qL 80
sleep 0.6
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
echo -ne "MEMTEST [XXX.....]\r" | pv -qL 80
sleep 0.6

echo -ne "MEMTEST [XXXX....]\r" | pv -qL 80
sleep 0.8

echo -ne "MEMTEST [XXXXX...]\r" | pv -qL 80
sleep 0.6

echo -ne "MEMTEST [XXXXXX..]\r" | pv -qL 80
sleep 0.6

echo -ne "MEMTEST [XXXXXXX.]\r" | pv -qL 80
sleep 0.6
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
echo -ne "MEMTEST [XXXXXXXX]\r" | pv -qL 80
sleep 2

echo -e "MEMTEST Complete     " | pv -qL 80
sleep 0.6

echo 64K RAM detected  | pv -qL 80
sleep 1.2

clear
catimg ./logo.png -w 170 -c 
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
sleep 3

mainmenu

trap 2
}
##################################################################
learn()
{
##################################################################
## LEARN
trap '' 2 
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo "===============================================================================================================================" | pv -qL 90
echo "Drake Legendary Education Analysis Ready-Now System (LEARN)" | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo
aplay -q UI_Terminal_Holotape_ProgramLoad_02.wav
echo 
echo "===============================================================================================================================" | pv -qL 90
echo "                        COMMAND REFERENCE" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo " COMMAND                USE                      EXAMPLE                           " | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo " LEARN                  This output              LEARN                             " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " LOAD                   Load a Text File         LOAD example.txt                  " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " IMAGE                  Load an Image File       LOAD example.gif                  " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " REBOOT                 Restart Terminal         REBOOT                            " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " MOTD                   Print MoTD               MOTD                              " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " LOG                    Print System Log         LOG                               " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " LAB                    Print LAB Output         LAB                               " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " DATE                   Print SYSTEM DATE        DATE                              " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " TIME                   Print SYSTEM TIME        TIME                              " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " SEARCH                 SEARCH COMPUTER ARCHIVE  When prompted provide search term " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " LOCATE                 LOCATE THIS TERMINAL     LOCATE                            " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " STATUS                 RETURN SHIP STATUS       STATUS                            " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " READ                   READ SHIP MESSAGEBOARD   READ                              " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " SEND                   UPDATE SHIP MESSAGEBOARD When prompted, type message.    " | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo "                        ESCALATED COMMAND REFERENCE" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " VENT        Vent a compartment to space without need for fire control  When prompted provide search term " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " LOCATE                 LOCATE THIS TERMINAL     LOCATE                            " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " STATUS                 RETURN SHIP STATUS       STATUS                            " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " READ                   READ SHIP MESSAGEBOARD   READ                              " | pv -qL 90
echo "-------------------------------------------------------------------------------------------------------------------------------"| pv -qL 90
echo " SEND                   UPDATE SHIP MESSAGEBOARD When prompted, type message.    " | pv -qL 90
echo 
prompt
trap 2
}

##################################################################
load-data()
{
##################################################################
##LOAD 
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
source ./filesystem.sh
files=($maindir/*.txt)
x=0
echo "-------------------------------------------------" | pv -qL 90
echo "NUMBER   |     Filename                          " | pv -qL 90
echo "-------------------------------------------------" | pv -qL 90
for t in ${files[@]}; do
echo "-------------------------------------------------" | pv -qL 90
echo "$x        $t"                         | pv -qL 90
x=$((x+1))
done
echo "-------------------------------------------------" | pv -qL 90
echo
read -p "Please Select " selection
y=$((x+1))

if [ $selection -lt $x ]
then
	echo "Loading File"
	echo "----------------------------------"  | pv -qL 90
	echo
	cat "${files[$selection]}" | pv -qL 90
	echo
	echo
fi
if [ $selection -eq $x ]
then
	echo "Incorrect Selection"
fi
if [ $selection -gt $x ]
then
	echo "Incorrect Selection"
fi

	
prompt
}

image()
{
##################################################################
##LOAD IMAGE
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
source ./filesystem.sh
files=($maindir/*.gif)
x=0
echo "-------------------------------------------------" | pv -qL 90
echo "NUMBER   |     Filename                          " | pv -qL 90
echo "-------------------------------------------------" | pv -qL 90
for t in ${files[@]}; do
echo "-------------------------------------------------" | pv -qL 90
echo "$x        $t"                         | pv -qL 90
x=$((x+1))
done
echo "-------------------------------------------------" | pv -qL 90
echo
read -p "Please Select " selection
y=$((x+1))

if [ $selection -lt $x ]
then
	echo "Loading File"
	echo "----------------------------------"  | pv -qL 90
	echo
	catimg -w 120 -l 4 "${files[$selection]}"
	echo
	echo
fi
if [ $selection -eq $x ]
then
	echo "Incorrect Selection"
fi
if [ $selection -gt $x ]
then
	echo "Incorrect Selection"
fi

	
prompt
}
##################################################################
read-msg()
{
##################################################################
## READ 
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
cat ./mail.txt
prompt
}
##################################################################
send-msg()
{
##################################################################
## SEND MESSAGE
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
read -p "Please Enter Message:" msg
newmsg=$usrname$delimiter$msg
echo $newmsg >> ./mail.txt
read-msg 
}
##################################################################
atmo()
{
##################################################################
## ATMO
source ./atmo.sh
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo "===============================================================================================================================" | pv -qL 90
echo "Internal Atmosphere Composition" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo
aplay -q UI_Terminal_Holotape_ProgramLoad_01.wav
sleep 0.6
if [ $nitrogen -gt 0 ]
then
	echo Nitrogen: $nitrogen | pv -qL 80
	sleep 0.6
	echo
fi
if [ $oxygen -gt 0 ]
then
	echo Oxygen: $oxygen | pv -qL 80
	sleep 0.6
	echo
fi
if [ $oxygen -gt 80 ]
then
	echo Warning: Oxygen Concentration is too high! | pv -qL 80
	sleep 0.6
	echo
fi
if [ $diazomethane -gt 0 ]
then
	echo DiazoMethane: $diazomethane | pv -qL 80
	sleep 0.6
	echo Warning DiazoMethane is a dangerous gas! | pv -qL 80
	sleep 0.6
	echo
fi
if [ $chlorine -gt 0 ]
then
	echo Chlorine: $chlorine | pv -qL 80
	sleep 0.6
	echo Warning Chlorine is a dangerous gas! | pv -qL 80
	sleep 0.6
	echo
fi
if [ $other -gt 0 ]
then
	echo Other: $other | pv -qL 80
	sleep 0.6
	echo
fi
prompt
}
##################################################################
log()
{
##################################################################
## LOG
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
source ./log.sh
echo "===============================================================================================================================" | pv -qL 90
echo "Displaying Local Computer Core Log Items" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo
sleep 0.6
echo $logitem1date                               $logitem1 | pv -qL 90
echo
sleep 0.6
echo $logitem2date                               $logitem2 | pv -qL 90
echo
sleep 0.6
echo $logitem3date                               $logitem3 | pv -qL 90
echo
sleep 0.6
echo $logitem4date                               $logitem4 | pv -qL 90
echo
sleep 0.6
echo $logitem5date                               $logitem5 | pv -qL 90
echo
sleep 0.6
prompt
}
shipdate()
{
##################################################################
## DATE
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo $shipdatevar
prompt
}
##################################################################
shiptime()
{
##################################################################
## Time
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo $shiptimevar

prompt
}
shipstatus()
{
##################################################################
## Ship Status
source ./shipstatus.sh
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo "===============================================================================================================================" | pv -qL 90
echo "Welcome to STATUS" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
sleep 0.6
echo
echo "$currentshipstatus" | pv -qL 90
prompt
}
##################################################################
search()
{
##################################################################
## Search
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo "===============================================================================================================================" | pv -qL 90
echo "Welcome to SEARCH" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
echo "WARNING: Main Computer Core Offline." | pv -qL 90
sleep 0.6
echo
echo "Search Function will use Wikipedia Text Only Knowledgebase as backup" | pv -qL 90
echo
sleep 0.6
read -p "Search Term: " searchinput
searchreturn=$(wikipedia2text $searchinput)
echo "$searchreturn" | pv -qL 90

prompt
}
##################################################################
lab()
{
##################################################################
## LAB
source ./lab.sh
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo "===============================================================================================================================" | pv -qL 90
echo "Welcome to LAB" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
sleep 0.6
echo "WARNING: Main Computer Core Offline." | pv -qL 90
sleep 0.6
echo "LAB Results will not be stored." | pv -qL 90
sleep 0.6
echo
echo "LAB STATUS:" | pv -qL 90
sleep 0.6
echo
echo "$labresult" | pv -qL 90
sleep 0.6
echo
prompt
}
##################################################################
locate()
{
##################################################################
## LOCATE
source ./locate.sh
aplay -q ./UI_Hacking_PasswordHelpAttempts.wav
echo "===============================================================================================================================" | pv -qL 90
echo "Welcome to LOCATE" | pv -qL 90
echo "===============================================================================================================================" | pv -qL 90
sleep 0.6
echo "WARNING: Main Computer Core Offline." | pv -qL 90
sleep 0.6
echo "LOCATION results may not be accurate." | pv -qL 90
sleep 0.6
echo
echo "$location" | pv -qL 90
sleep 0.6
echo
prompt
}
escalate()
{
##################################################################
## ESCALATE Privs

read -p "ENTER DESIRED USERNAME: " ninput
case ninput in 
			"root")
				read -p "ENTER PASSWORD: " input
				case $input in

					"STEVENSON")
						echo "WARNING: USER IS ROOT" | pv -qL 90
						sleep 0.6
						echo
						aplay -q ./ui_hacking_passgood.wav 
						root=yes
						usrname="root"
						prompt
						;&
					"JEKYLL")
						echo "NICE TRY MR HYDE" | pv -qL 90
						sleep 0.6
						echo
						aplay -q ./ui_hacking_passbad.wav  
						prompt
						;&
					"HYDE")
						echo "NICE TRY DR JEKYLL" | pv -qL 90
						sleep 0.6
						echo
						aplay -q ./ui_hacking_passbad.wav  
						prompt
						;&
					"DISINTEGRATE")
						exit 1
						;&
					*)
						echo -e "INCORRECT PASSWORD" | pv -qL 90
						sleep 2
						aplay -q ./ui_hacking_passbad.wav  
						prompt
						;;
					esac
			;&
			"maint")
				read -p "ENTER PASSWORD: " input
				case $input in

					"BEER")
						echo
						aplay -q ./ui_hacking_passgood.wav 
						usrname="maint"
						prompt
						;&
					"DISINTEGRATE")
						exit 1
						;&
					*)
						echo -e "INCORRECT PASSWORD" | pv -qL 90
						sleep 2
						aplay -q ./ui_hacking_passbad.wav  
						prompt
						;;
					esac
			;&
			"spscwby")
				echo -e "WELCOME BACK" | pv -qL 90
				usrname="spscwby"
				prompt
				;;
			;&
			*)
				echo -e "Not Recognised" | pv -qL 90
				sleep 2
				aplay -q ./ui_hacking_passbad.wav  
				prompt
			;;
		esac
sleep 0.6

}
##################################################################
mainmenu


##################################
####TODO
####
####VENT GAS
####DISABLE POWER
####HISTORY
