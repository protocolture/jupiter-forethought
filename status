#!/usr/bin/env bash

#Power Status 
powerstatus=1

#Computer Status 
cstatussync=0
c1statusonline=1
c2statusonline=0

#0 = off, 1 = on, 2 = Fire, 3 = Foreign Gas
lifesupportstatus=0 

artificialgravitystatus=0

#Docking 0= clamps disengaged, 1= clamps engaged, docked, 2 = clamps gone/failed. 
docking1status=2
docking2status=0
cargodockstatus=0
lifepodstatus=0

#Comms 
communicationsstatus=0 #0 = offline, 1= damaged, 2 = online 
emergencybeaconstatus=0 #0 = offline, 1= online, 2 = broadcasting threat warning, 3 = Normal emergency Broadcast. 

#ThrusterStatus
# 0 = offline, 1= station keeping, 2= hard burn
thrusterstatus=0

#Location Status 
# 0 = Nominal, 1= Short Circuit, 2= Fire, 3=complete failure

opsstatus=0
mainpowerstatus=0
backuppowerstatus=0
armorystatus=0
habstatus=0
messstatus=0
briefstatus=0
compcore1status=0
compcore2status=0
wastestatus=0
cargostatus=0
engineeringstatus=0
thrustermaintenancestatus=0
brigstatus=0
medicalstatus=0
hydroponicstatus=0
researchstatus=0
redactedstatus=0


#Header

clear
echo ------------------------------------------------------------ | pv -qL 80
echo "         Beginning MUSE STATION Status Checks" | pv -qL 80
echo ------------------------------------------------------------ | pv -qL 80
echo

sleep 0.6

#POWER
function Power()
{
echo "***** POWER STATUS *****" | pv -qL 80
sleep 0.6
echo

if [[ $powerstatus == 0 ]]
then
	echo Main Power STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Error: All Primary Systems: Offline | pv -qL 80
	sleep 0.6
	echo Restore main power to check status of primary systems. | pv -qL 80
	sleep 0.6
	echo
	exit 1
fi

if [[ $powerstatus == 1 ]]
then
	echo Main Power STATUS:ONLINE | pv -qL 80
	sleep 0.6
	echo Main Reactor STATUS:STABLE | pv -qL 80
	sleep 0.6
	echo Backup Reactor STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo
	sleep 0.6
fi

if [[ $powerstatus == 2 ]]
then
	echo Main Power STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Main Reactor STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Backup Reactor STATUS:ONLINE | pv -qL 80
	sleep 0.6
	echo Backup Reactor STATUS:STABLE | pv -qL 80
	sleep 0.6
	echo
	sleep 0.6
fi
}
#/POWER

#COMPUTER

function Computer(){

echo "***** COMPUTER STATUS *****" | pv -qL 80
sleep 0.6
echo

if [[ $c1statusonline == 0 && $cstatussync == 0 ]]
then
	echo Computer Core 1 STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Computer Core 1 SYNC:OFFLINE | pv -qL 80
	sleep 0.6
	echo
fi

#Detect Power/Sync race condition and exit

if [[ $c1statusonline == 1 && $cstatussync == 1 && $c2statusonline == 0 ]]
then
	echo ERROR: Computer Core Power/Sync Error | pv -qL 80
	sleep 0.6
	echo WARNING: For safety reasons, Computer Functions are disabled. | pv -qL 80
	sleep 0.6
	echo Please consult your user manual for further instructions. 
	sleep 0.6
	echo
	exit 1
fi

if [[ $c1statusonline == 0 && $cstatussync == 1 && $c2statusonline == 1 ]]
then
	echo ERROR: Computer Core Power/Sync Error | pv -qL 80
	sleep 0.6
	echo WARNING: For safety reasons, Computer Functions are disabled. | pv -qL 80
	sleep 0.6
	echo Please consult your user manual for further instructions. 
	sleep 0.6
	echo
	exit 1
fi

if [[ $c1statusonline == 0 && $cstatussync == 1 ]]
then
	echo Computer Core 1 STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Computer Core 1 SYNC:ONLINE | pv -qL 80
	sleep 0.6
	echo 
fi

if [[ $c1statusonline == 1 && $cstatussync == 1 ]]
then
		echo Computer Core 1 STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo Computer Core 1 SYNC:ONLINE | pv -qL 80	
		sleep 0.6
		echo
fi

if [[ $c1statusonline == 1 && $cstatussync == 0 ]]
then
		echo Computer Core 1 STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo Computer Core 1 SYNC:OFFLINE | pv -qL 80
		sleep 0.6
		echo Error: Sync Status Down. Assuming Master Role. | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $c2statusonline == 0 && $cstatussync == 0 ]]
then
	echo Computer Core 2 STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Computer Core 2 SYNC:OFFLINE | pv -qL 80
	sleep 0.6
	echo
fi

if [[ $c2statusonline == 0 && $cstatussync == 1 ]]
then
	echo Computer Core 2 STATUS:OFFLINE | pv -qL 80
	sleep 0.6
	echo Computer Core 2 SYNC:ONLINE | pv -qL 80
	sleep 0.6
	echo
fi

if [[ $c2statusonline == 1 && $cstatussync == 1 ]]
then
		echo Computer Core 2 STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo Computer Core 2 SYNC:ONLINE | pv -qL 80	
		sleep 0.6
		echo
fi

if [[ $c2statusonline == 1 && $cstatussync == 0 ]]
then
		echo Computer Core 2 STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo Computer Core 2 SYNC:OFFLINE | pv -qL 80
		sleep 0.6
		echo Error: Sync Status Down. Assuming Master Role. | pv -qL 80
		sleep 0.6
		echo
fi

# Detect Both Cores online with no sync error and exit.

if [[ $cstatussync == 0 && $c1statusonline == 1 && $c2statusonline == 1 ]]
then
	echo ERROR: Dual Mastership Detected. | pv -qL 80
	sleep 0.6
	echo WARNING: For safety reasons, Computer Functions are disabled. | pv -qL 80
	sleep 0.6
	echo Please consult your user manual for further instructions. 
	sleep 0.6
	echo
	exit 1
fi 
}
#/COMPUTER



#LIFESUPPORT

function LifeSupport(){

echo "***** LIFE SUPPORT STATUS *****" | pv -qL 80
sleep 0.6
echo

if [[ $lifesupportstatus == 0 ]]
then
		echo Life Support STATUS:OFFLINE | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $lifesupportstatus == 1 ]]
then
		echo Life Support STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $lifesupportstatus == 2 ]]
then
		echo Life Support STATUS:WARNING| pv -qL 80
		sleep 0.6
		echo Fire Detected, Venting Atmosphere| pv -qL 80
		sleep 0.6
		echo
fi

if [[ $lifesupportstatus == 3 ]]
then
		echo Life Support STATUS:WARNING| pv -qL 80
		sleep 0.6
		echo GASSES INCOMPATIBLE WITH HUMAN LIFE, SEEK EMERGENCY OXYGEN| pv -qL 80
		sleep 0.6
		echo
fi
}
#/LIFESUPPORT
#ARTIFICIALGRAVITY 

function ArtGravity(){

echo "***** ARTIFICIAL GRAVITY STATUS *****" | pv -qL 80
sleep 0.6
echo



if [[ $artificialgravitystatus == 0 ]]
then
		echo Artificial Gravity STATUS:OFFLINE | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $artificialgravitystatus == 1 ]]
then
		echo Artificial Gravity STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo
fi
}
#/ARTIFICIALGRAVITY 

#DOCKING
#Docking 0= clamps disengaged, 1= clamps engaged, docked, 2 = clamps gone/failed. 

function Docking(){

echo "***** DOCKING STATUS *****" | pv -qL 80
sleep 0.6
echo

#DOCKINGBAY/AIRLOCK 1
if [[ $docking1status == 0 ]]
then
		echo Docking Bay 1 STATUS:STANDBY | pv -qL 80
		sleep 0.6
		echo Docking Systems STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo Airlock STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $docking1status == 1 ]]
then
		echo Docking Bay 1 STATUS:OCCUPIED | pv -qL 80
		sleep 0.6
		echo Docking Bay 1 Clamps Engaged | pv -qL 80
		sleep 0.6
		echo Docked Vessel Detected | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $docking1status == 2 ]]
then
		echo Docking Bay 1 STATUS:CLAMP FAILURE DETECTED | pv -qL 80
		sleep 0.6
		echo Docking Bay 1 Inoperable | pv -qL 80
		sleep 0.6
		echo Air Lock Failure | pv -qL 80
		sleep 0.6
		echo Do Not Attempt Docking| pv -qL 80
		sleep 0.6
		echo
fi

#DOCKINGBAY/AIRLOCK 2
if [[ $docking2status == 0 ]]
then
		echo Docking Bay 2 STATUS:STANDBY | pv -qL 80
		sleep 0.6
		echo Docking Systems STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo Airlock STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $docking2status == 1 ]]
then
		echo Docking Bay 2 STATUS:OCCUPIED | pv -qL 80
		sleep 0.6
		echo Docking Bay 2 Clamps Engaged | pv -qL 80
		sleep 0.6
		echo Docked Vessel Detected | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $docking2status == 2 ]]
then
		echo Docking Bay 2 STATUS:CLAMP FAILURE DETECTED | pv -qL 80
		sleep 0.6
		echo Docking Bay 2 Inoperable | pv -qL 80
		sleep 0.6
		echo Air Lock Failure | pv -qL 80
		sleep 0.6
		echo Do Not Attempt Docking| pv -qL 80
		sleep 0.6
		echo
fi

#DOCKINGBAY/AIRLOCK CARGO
if [[ $cargodockstatus == 0 ]]
then
		echo Docking Bay CARGO STATUS:STANDBY | pv -qL 80
		sleep 0.6
		echo Docking Systems STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo Airlock STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $cargodockstatus == 1 ]]
then
		echo Docking Bay CARGO STATUS:OCCUPIED | pv -qL 80
		sleep 0.6
		echo Docking Bay CARGO Clamps Engaged | pv -qL 80
		sleep 0.6
		echo Docked Vessel Detected | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $cargodockstatus == 2 ]]
then
		echo Docking Bay CARGO STATUS:CLAMP FAILURE DETECTED | pv -qL 80
		sleep 0.6
		echo Docking Bay CARGO Inoperable | pv -qL 80
		sleep 0.6
		echo Air Lock Failure | pv -qL 80
		sleep 0.6
		echo Do Not Attempt Docking| pv -qL 80
		sleep 0.6
		echo
fi

#Escape Pod
if [[ $cargodockstatus == 0 ]]
then
		echo Escape Pod STATUS:STANDBY | pv -qL 80
		sleep 0.6
		echo Escape Pod Life Support STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo Airlock STATUS:NOMINAL | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $cargodockstatus == 1 ]]
then
		echo Escape Pod STATUS:LAUNCHED | pv -qL 80
		sleep 0.6
		echo
fi
}
#/DOCKING

#COMM STATUS 

function Comms(){

#0 = offline, 1= damaged, 2 = online

echo "***** COMM STATUS *****" | pv -qL 80
sleep 0.6
echo

#Comms
if [[ $communicationsstatus == 0 ]]
then
		echo Communications Array STATUS:OFFLINE | pv -qL 80
		sleep 0.6

fi

if [[ $communicationsstatus == 1 ]]
then
		echo Communications Array STATUS:OFFLINE | pv -qL 80
		sleep 0.6
		echo WARNING: Antenna Malfunction | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $communicationsstatus == 2 ]]
then
		echo Communications Array STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo WARNING: Antenna Malfunction | pv -qL 80
		sleep 0.6
		echo
fi

#BEACON STATUS 

#0 = offline, 1= online, 2 = broadcasting bio threat warning, 3 = Normal Broadcast. 


#Comms
if [[ $communicationsstatus == 0 ]]
then
		echo Emergency Beacon STATUS:OFFLINE | pv -qL 80
		sleep 0.6
		echo

fi

if [[ $communicationsstatus == 1 ]]
then
		echo Emergency Beacon STATUS:ONLINE | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $communicationsstatus == 2 ]]
then
		echo Communications Array STATUS:BROADCASTING | pv -qL 80
		sleep 0.6
		echo WARNING: BROADCASTING CLASS 5 BIOHAZARD WARNING | pv -qL 80
		sleep 0.6
		echo STATION WILL BE DESTROYED BY AUTHORITIES TO CONTAIN INFECTION | pv -qL 80
		sleep 0.6
		echo PLEASE ENSURE ALL CREW HAVE THEIR EFFECTS IN ORDER | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $communicationsstatus == 3 ]]
then
		echo Communications Array STATUS:BROADCASTING | pv -qL 80
		sleep 0.6
		echo
fi
}
#/COMM STATUS 

#THRUSTER STATUS

function ThrusterControl(){

echo "***** THRUSTER STATUS *****" | pv -qL 80
sleep 0.6
echo

if [[ $thrusterstatus == 0 ]]
then
		echo Thrusters STATUS:OFFLINE  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $thrusterstatus == 1 ]]
then
		echo Thrusters STATUS:KEEPING STATION  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $thrusterstatus == 2 ]]
then
		echo Thrusters STATUS:DEORBIT BURN  | pv -qL 80
		sleep 0.6
		echo
fi
}
#/THRUSTER

#STRUCTURAL INTEGRITY

function StructuralIntegrity(){

# 0 = Nominal, 1= Short Circuit, 2= Fire, 3=complete failure

echo "***** INTEGRITY STATUS *****" | pv -qL 80
sleep 0.6
echo

#opsstatus=0
#mainpowerstatus=0
#backuppowerstatus=0
#armorystatus=0
#habstatus=0
#messstatus=0
#briefstatus=0
#compcore1status=0
#compcore2status=0
#wastestatus=0
#cargostatus=0
#engineeringstatus=0
#thrustermaintenancestatus=0
#brigstatus=0
#medicalstatus=0
#hydroponicstatus=0
#researchstatus=0
#redactedstatus=0

#OPS

if [[ $opsstatus == 0 ]]
then
		echo OPS STATUS:NOMINAL  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $opsstatus == 1 ]]
then
		echo OPS STATUS:ELECTRICAL FAULT | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $opsstatus == 2 ]]
then
		echo OPS STATUS:FIRE DETECTED | pv -qL 80
		sleep 0.6
		echo
fi
if [[ $opsstatus == 3 ]]
then
		echo OPS STATUS:COMPARTMENT DESTROYED  | pv -qL 80
		sleep 0.6
		echo
fi

#/OPS

#MAIN POWER CONTROL

if [[ $mainpowerstatus == 0 ]]
then
		echo MAIN POWER CONTROL STATUS:NOMINAL  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $mainpowerstatus == 1 ]]
then
		echo MAIN POWER CONTROL STATUS:ELECTRICAL FAULT | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $mainpowerstatus == 2 ]]
then
		echo MAIN POWER CONTROL STATUS:FIRE DETECTED | pv -qL 80
		sleep 0.6
		echo
fi
if [[ $mainpowerstatus == 3 ]]
then
		echo MAIN POWER CONTROL STATUS:COMPARTMENT DESTROYED  | pv -qL 80
		sleep 0.6
		echo
fi

#/MAIN POWER CONTROL
#BACKUP POWER CONTROL

if [[ $backuppowerstatus == 0 ]]
then
		echo BACKUP POWER CONTROL STATUS:NOMINAL  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $backuppowerstatus == 1 ]]
then
		echo BACKUP POWER CONTROL STATUS:ELECTRICAL FAULT | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $backuppowerstatus == 2 ]]
then
		echo BACKUP POWER CONTROL STATUS:FIRE DETECTED | pv -qL 80
		sleep 0.6
		echo
fi
if [[ $backuppowerstatus == 3 ]]
then
		echo BACKUP POWER CONTROL STATUS:COMPARTMENT DESTROYED  | pv -qL 80
		sleep 0.6
		echo
fi

#/BACKUP POWER CONTROL

#ARMORY CONTROL

if [[ $armorystatus == 0 ]]
then
		echo ARMORY STATUS:NOMINAL  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $armorystatus == 1 ]]
then
		echo ARMORY STATUS:ELECTRICAL FAULT | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $armorystatus == 2 ]]
then
		echo ARMORY STATUS:FIRE DETECTED | pv -qL 80
		sleep 0.6
		echo
fi
if [[ $armorystatus == 3 ]]
then
		echo ARMORY STATUS:COMPARTMENT DESTROYED  | pv -qL 80
		sleep 0.6
		echo
fi

#/ARMORY CONTROL

#HAB CONTROL

if [[ $habstatus == 0 ]]
then
		echo HAB STATUS:NOMINAL  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $habstatus == 1 ]]
then
		echo HAB STATUS:ELECTRICAL FAULT | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $habstatus == 2 ]]
then
		echo HAB STATUS:FIRE DETECTED | pv -qL 80
		sleep 0.6
		echo
fi
if [[ $habstatus == 3 ]]
then
		echo HAB STATUS:COMPARTMENT DESTROYED  | pv -qL 80
		sleep 0.6
		echo
fi

#/HAB CONTROL

#HAB CONTROL

if [[ $habstatus == 0 ]]
then
		echo HAB STATUS:NOMINAL  | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $habstatus == 1 ]]
then
		echo HAB STATUS:ELECTRICAL FAULT | pv -qL 80
		sleep 0.6
		echo
fi

if [[ $habstatus == 2 ]]
then
		echo HAB STATUS:FIRE DETECTED | pv -qL 80
		sleep 0.6
		echo
fi
if [[ $habstatus == 3 ]]
then
		echo HAB STATUS:COMPARTMENT DESTROYED  | pv -qL 80
		sleep 0.6
		echo
fi
}
#/HAB CONTROL

Power
Computer
LifeSupport
ArtGravity
Docking
Comms
ThrusterControl